Input: method, data, auth, ver_api
Output: status = 200, status_info = ("ok" or "invalid"), data = dict

--------------------------------------------------------------------------------------------------------

profile_input: 
	username = (str, min_length=5, max_length=100),
	first_name = (str, required = false)
	last_name = (str, required = false)
	picture = (str, required = false)
profile_obj: id, username, first_name, last_name, picture

method: createProfile
Input: profile_input
Output: profile_obj

method: updateProfile
Input: profile_input
Output: profile_obj


method: getProfile
Input: profile_id
Output: profile_obj

-------------------------------------------------------------------------------------------------------

post_obj: publisher.username, publisher.picture, id, image, caption, published_date

method: createPost
Input: 
	image = (str, required = True),
	caption = (str, required = false)
Output: post_obj


method: getFirstPage
Input: -
Output: list of post_obj s

--------------------------------------------------------------------------------------------------------

method: postComment
Input: 
	post_id = (id of post),
	comment_post = (str, min_length=5, max_length=100)
Output: {
            status: 200,
            status_info: ("ok" or "invalid")
            data: {}
        }

--------------------------------------------------------------------------------------------------------

method: like
Input: post_id
Output: {
            status: 200,
            status_info: ("ok" or "invalid")
            data: {}
        }

--------------------------------------------------------------------------------------------------------

method: startToFollow
Input: follower_id = (id of someone that you want to follow)
Output: {
            status: 200,
            status_info: ("ok" or "invalid")
            data: {}
        }


method: stopToFollow
Input: follower_id = (id of someone that you want to stop to follow)
Output: {
            status: 200,
            status_info: ("ok" or "invalid")
            data: {}
        }


method: getFollowers
Input: following_id = (id of someone that you want to see his followers)
Output:
	list of profile_obj


method getFollowings
Input: follower_id = (id of someone that you want to see his followings)
Output:
    list of profile_obj
